############################################################################
# arch/tricore/src/tc4xx/Make.defs
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.  The
# ASF licenses this file to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance with the
# License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.
#
############################################################################

ifeq ($(CONFIG_ARCH_CHIP_TC499),y)
  -include tc4xx/tc499/Make.defs
endif

CFLAGS := $(filter-out --language=+gcc,$(CFLAGS))

CHIP_CSRCS += tc4xx_timerisr.c
CHIP_CSRCS += tc4xx_irq.c

VPATH += tc4xx

ifeq ($(CONFIG_TRICORE_TOOLCHAIN_TASKING),y)
tc4xx_libc$(OBJEXT): tc4xx_libc.c
	$(call COMPILE, $<, $@)

libc_fpu$(LIBEXT): tc4xx_libc$(OBJEXT)
	$(call ARCHIVE, $@, $<)

EXTRA_LIBS += libc_fpu$(LIBEXT)
else
tc4xx_dummy$(OBJEXT): tc4xx_dummy.c
	$(call COMPILE, $<, $@)

libos$(LIBEXT): tc4xx_dummy$(OBJEXT)
	$(call ARCHIVE, $@, $<)

EXTRA_LIBS += libos$(LIBEXT)
endif


LIBPATHS   += $(CURDIR)

TC499_UNPACK  = tc499
TC499_COMMIT  = master
TC499_URL     = https://github.com/wangchdo/tc499_sdk/archive/refs/heads
TC499_TARBALL = tc4xx/$(TC499_UNPACK).tar.gz
TC499_DIR     = tc499_sdk-master


$(TC499_TARBALL):
	$(call DOWNLOAD,$(TC499_URL),$(TC499_COMMIT).tar.gz,$(TC499_TARBALL))

tc4xx/.tc499_unpack: $(TC499_TARBALL)
	$(Q) echo "Unpacking: TC499"
	$(Q) tar xzf $(TC499_TARBALL) -C tc4xx
	$(Q) mv tc4xx/$(TC499_DIR) tc4xx/$(TC499_UNPACK)
	$(Q) touch tc4xx/.tc499_unpack

ifeq ($(wildcard tc4xx/$(TC499_UNPACK)/.git),)
context:: .tc499_unpack

distclean::
	$(call DELFILE, tc4xx/.tc499_unpack)
	$(call DELFILE, $(TC499_TARBALL))
	$(call DELDIR, tc4xx/$(TC499_UNPACK))
	$(call DELFILE, $(SDK_IN_FILE_PATH))
endif

